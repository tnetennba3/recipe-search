{"version":3,"sources":["img/search.svg","img/github_logo_black.png","img/github_octocat.png","style.js","recipeSearch.js","recipeResults.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","div","_templateObject","SearchInput","input","_templateObject2","SearchButton","button","_templateObject3","searchIcon","RecipeList","ol","_templateObject4","RecipeCard","li","_templateObject5","RecipeImage","img","_templateObject6","RecipeName","_templateObject7","RecipeInfo","_templateObject8","FlexWrapper","_templateObject9","Image","_templateObject10","props","width","RecipeSearch","_ref","query","handleSubmit","handleNewQuery","react_default","a","createElement","target","rel","href","src","githubLogoBlack","githubOctocat","onSubmit","value","placeholder","onChange","type","RecipeResults","recipes","map","_ref2","recipeUrl","id","imageUrl","name","ingredients","timeInMin","key","alt","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","preventDefault","state","axios","get","concat","EDAMAM_URL","EDAMAM_ID","EDAMAM_KEY","then","data","hits","recipe","uri","label","image","url","ingredientLines","length","totalTime","recipeSearch","recipeResults","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.abd10554.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.cbb5b8a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/github_logo_black.cefc2023.png\";","module.exports = __webpack_public_path__ + \"static/media/github_octocat.ef468e27.png\";","import styled from 'styled-components'\nimport searchIcon from './img/search.svg'\n\nconst WHITE = '#FFF'\nconst LIGHT = '#E3E4E5'\nconst MEDIUM = '#707376'\n\nconst Wrapper = styled.div`\n  max-width: 1400px;\n  padding: 40px;\n  margin: 0 auto;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    padding: 10px;\n  }\n`\n\nconst SearchInput = styled.input`\n  background-color: ${LIGHT};\n  background-size: 100%;\n  font-size: 16px;\n  padding: 18px 54px 18px 18px;\n  max-width: 400px;\n  width: calc(100% - 72px);\n  border: none;\n  outline: none;\n  transition: background-color 0.3s ease, border-bottom 0.3s ease;\n\n  ::placeholder {\n    color: ${MEDIUM};\n  }\n\n  &:focus {\n    background-color: ${WHITE};\n    border-bottom: solid;\n  }\n\n  @media (max-width: 480px) {\n    max-width: 228px;\n  }\n`\n\nconst SearchButton = styled.button`\n  color: ${WHITE};\n  background: center no-repeat url(${searchIcon});\n  background-size: 20px;\n  margin-left: -54px;\n  padding: 33px 27px 21px;\n  margin-bottom: 5px;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`\n\nconst RecipeList = styled.ol`\n  padding-inline-start: 0px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nconst RecipeCard = styled.li`\n  width: 300px;\n  height: 410px;\n  list-style: none;\n  margin: 20px;\n  background-color: ${LIGHT};\n\n  @media (max-width: 800px) {\n    width: 250px;\n    height: 360px;\n  }\n`\n\nconst RecipeImage = styled.img`\n  width: 300px;\n  height: 300px;\n\n  @media (max-width: 800px) {\n    width: 250px;\n    height: 250px;\n  }\n`\n\nconst RecipeName = styled.p`\n  margin: 10px;\n  text-align: left;\n  font-weight: bold;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`\n\nconst RecipeInfo = styled.p`\n  margin: 0 10px;\n  text-align: left;\n  font-size: 14px;\n`\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`\n\nconst Image = styled.img`\n  width: ${props => props.width};\n  align-self: center;\n`\n\nexport {\n  Wrapper,\n  SearchInput,\n  SearchButton,\n  RecipeList,\n  RecipeCard,\n  RecipeImage,\n  RecipeName,\n  RecipeInfo,\n  Image,\n  FlexWrapper,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport githubLogoBlack from './img/github_logo_black.png'\nimport githubOctocat from './img/github_octocat.png'\nimport { SearchInput, SearchButton, Image, FlexWrapper } from './style'\n\nconst RecipeSearch = ({ query, handleSubmit, handleNewQuery }) => (\n  <div>\n    <FlexWrapper>\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        href=\"https://github.com/tnetennba3/recipe-search\"\n      >\n        <Image src={githubLogoBlack} width=\"75px\" />\n        <Image src={githubOctocat} width=\"30px\" />\n      </a>\n    </FlexWrapper>\n    <form onSubmit={handleSubmit}>\n      <SearchInput\n        value={query}\n        placeholder=\"Search by recipe or ingredient\"\n        onChange={handleNewQuery}\n      />\n      <SearchButton type=\"submit\" />\n    </form>\n  </div>\n)\n\nRecipeSearch.propTypes = {\n  query: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleNewQuery: PropTypes.func.isRequired,\n}\n\nexport default RecipeSearch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  RecipeList,\n  RecipeCard,\n  RecipeImage,\n  RecipeName,\n  RecipeInfo,\n} from './style'\n\nconst RecipeResults = ({ recipes }) => (\n  <RecipeList>\n    {recipes.map(\n      ({ recipeUrl, id, imageUrl, name, ingredients, timeInMin }) => (\n        <a target=\"_blank\" rel=\"noreferrer noopener\" href={recipeUrl} key={id}>\n          <RecipeCard>\n            <RecipeImage src={imageUrl} alt=\"\" />\n            <RecipeName>{name}</RecipeName>\n            <RecipeInfo>Ingredients: {ingredients}</RecipeInfo>\n            <RecipeInfo>\n              Time: {timeInMin ? timeInMin + ' min' : 'N/A'}\n            </RecipeInfo>\n          </RecipeCard>\n        </a>\n      )\n    )}\n  </RecipeList>\n)\n\nRecipeResults.propTypes = {\n  recipes: PropTypes.arrayOf(\n    PropTypes.shape({\n      recipeUrl: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      timeInMin: PropTypes.number,\n    })\n  ).isRequired,\n}\n\nexport default RecipeResults\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { EDAMAM_URL, EDAMAM_ID, EDAMAM_KEY } from './settings.json'\nimport { Wrapper } from './style'\nimport RecipeSearch from './recipeSearch'\nimport RecipeResults from './recipeResults'\n\nimport './reset.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      query: '',\n      recipes: [],\n    }\n  }\n\n  handleNewQuery = e => {\n    this.setState({ query: e.target.value })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const { query } = this.state\n    if (query) {\n      return axios\n        .get(`${EDAMAM_URL}${query}&app_id=${EDAMAM_ID}&app_key=${EDAMAM_KEY}`)\n        .then(({ data }) => {\n          const recipes = data.hits.map(({ recipe }) => ({\n            id: recipe.uri,\n            name: recipe.label,\n            imageUrl: recipe.image,\n            recipeUrl: recipe.url,\n            ingredients: recipe.ingredientLines.length,\n            timeInMin: recipe.totalTime,\n          }))\n\n          this.setState({ recipes })\n        })\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <RecipeSearch\n          query={this.state.query}\n          handleSubmit={this.handleSubmit}\n          handleNewQuery={this.handleNewQuery}\n        />\n        <RecipeResults recipes={this.state.recipes} />\n      </Wrapper>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}